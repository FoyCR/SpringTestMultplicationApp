spring.application.name=gamification
# Port where this microservice will run
server.port=8081
# Gives us access to the H2 database web console
spring.h2.console.enabled=true
# Creates the database in a file independent of challenge db
spring.datasource.url=jdbc:h2:file:~/gamification;AUTO_SERVER=TRUE;
# Creates or updates the schema if needed
spring.jpa.hibernate.ddl-auto=update
# For educational purposes we will show the SQL in console
spring.jpa.show-sql=true
# Username for connecting to the H2 db
spring.datasource.username=sa
# Password for connecting to the H2 db
spring.datasource.password=
# RabbitMQ exchange name, Even though the subscriber doesn?t own the exchange
#conceptually, you want your microservices to be able to start in any given order.
amqp.exchange.attempts=attempts.topic
# RabbitMQ queue name
amqp.queue.gamification=gamification.queue
# Shows declaration of exchanges, queues, bindings, etc.
logging.level.org.springframework.amqp.rabbit.core.RabbitAdmin=DEBUG